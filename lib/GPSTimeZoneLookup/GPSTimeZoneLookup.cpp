/*
  GSPSlookup.cpp - Library for looking up time zones from latitude and longitude.
  Created by Ryan Hamilton, June 18 2014.
  Released into the public domain.
*/


// #include <Arduino.h>
#include "GPSTimeZoneLookup.h"
// #include <Flash.h>

//#include <math.h>

GPSTimeZoneLookup::GPSTimeZoneLookup(float myLat, float myLong)
{
// find the city from the city list closest to our coordinates
    latitude = myLat;
    longitude = myLong;
    findClosestCity();
    // After all location parsing, write to the public properties
    GMTOffset = _closestCityGMTOffset;
    implementsDST = _closestCityUsesDST;
 }

void GPSTimeZoneLookup::findClosestCity()
{
        //define lat/long coordinates of all US citied above a population of 15000
        int _numCities = 313;
        // int _minIndex = 0;
        double thisDistance;
        _closestCityDistance = 3.0E+38; //very large distance, any point on earth will be closer

        const float _cityLats[] = {
			37.08339,
			31.22323,
			34.01426,
			32.64541,
			33.61427,
			32.47098,
			28.47688,
			30.43826,
			31.57851,
			32.07239,
			33.58011,
			32.46098,
			34.25704,
			30.83658,
			39.16532,
			39.86671,
			39.84338,
			39.97837,
			38.29674,
			39.20144,
			37.97476,
			39.95559,
			39.78504,
			39.61366,
			39.76838,
			38.39144,
			38.27757,
			39.83865,
			38.28562,
			39.92894,
			39.70421,
			39.82894,
			38.95922,
			39.52144,
			39.4667,
			38.67727,
			38.36446,
			38.87918,
			36.99032,
			39.02756,
			37.64563,
			37.69395,
			39.01673,
			38.15979,
			38.99895,
			38.20091,
			37.83615,
			38.14285,
			36.8656,
			38.19424,
			38.25424,
			37.3281,
			38.16007,
			38.14118,
			37.77422,
			38.14535,
			37.84035,
			38.25285,
			38.20007,
			38.11118,
			39.34589,
			39.29034,
			39.3995,
			39.507,
			39.21311,
			35.04563,
			36.16284,
			34.99591,
			35.06535,
			35.01424,
			36.38838,
			36.20811,
			36.50921,
			35.36202,
			39.48061,
			34.26759,
			33.65983,
			32.60986,
			42.2942,
			40.12448,
			40.10532,
			40.04115,
			41.41698,
			41.68199,
			41.1306,
			40.27948,
			41.59337,
			41.58227,
			41.74813,
			41.52837,
			41.53226,
			40.8831,
			40.48643,
			41.6106,
			40.4167,
			40.04837,
			40.75448,
			40.55837,
			41.48281,
			41.70754,
			41.66199,
			40.19338,
			40.04559,
			41.57587,
			41.47892,
			41.68338,
			41.47309,
			40.42587,
			40.04282,
			41.89755,
			42.25754,
			42.97225,
			42.27756,
			42.32115,
			42.30865,
			42.32226,
			42.33698,
			42.33143,
			42.46059,
			42.95947,
			42.32559,
			42.96336,
			42.90975,
			42.39282,
			42.46254,
			42.78752,
			42.64059,
			42.24587,
			42.90725,
			42.29171,
			42.86947,
			42.73254,
			42.25059,
			42.48587,
			46.54354,
			41.91643,
			43.59781,
			43.23418,
			43.1689,
			42.20115,
			42.22226,
			42.67087,
			42.21393,
			42.58031,
			42.24087,
			42.13949,
			43.00141,
			42.47754,
			42.7392,
			42.28143,
			42.3242,
			42.21421,
			42.91336,
			42.24115,
			46.91054,
			40.92501,
			40.58612,
			40.69946,
			41.37477,
			41.28449,
			41.35033,
			40.74255,
			41.64366,
			41.557,
			40.14477,
			40.28422,
			41.71894,
			41.1145,
			41.66394,
			40.0395,
			45.4647,
			42.58474,
			44.08861,
			42.72613,
			43.75083,
			33.37032,
			31.34455,
			35.19807,
			32.65783,
			35.18944,
			34.4839,
			31.34038,
			34.23087,
			34.54002,
			34.58941,
			31.47148,
			36.82523,
			36.74773,
			36.59634,
			36.70801,
			36.57078,
			38.93324,
			39.09193,
			37.27528,
			39.06387,
			38.47832,
			39.5186,
			38.25445,
			38.35,
			37.7528,
			37.97169,
			37.04308,
			32.42067,
			34.4048,
			36.72806,
			35.52808,
			32.70261,
			32.31232,
			35.97859,
			39.1638,
			39.60797,
			36.80553,
			36.20829,
			39.52963,
			39.64908,
			39.53491,
			39.5963,
			35.222,
			32.2504,
			31.75872,
			34.81506,
			31.69261,
			33.57786,
			31.99735,
			31.84568,
			35.53616,
			34.18479,
			31.65456,
			31.63622,
			31.84235,
			37.67748,
			37.10415,
			37.13054,
			58.30194,
			40.41628,
			43.6135,
			43.66294,
			47.67768,
			43.69544,
			43.46658,
			43.49183,
			46.41655,
			46.38044,
			43.61211,
			46.73239,
			43.54072,
			42.8713,
			47.71796,
			43.82602,
			42.56297,
			45.67965,
			46.00382,
			47.50024,
			46.59271,
			48.19579,
			46.87215,
			46.80833,
			46.87918,
			46.82666,
			48.23251,
			41.12389,
			41.86663,
			40.83242,
			42.20681,
			44.05817,
			44.9279,
			44.98595,
			44.99012,
			42.22487,
			45.67208,
			44.27262,
			44.9429,
			44.08054,
			41.51021,
			41.11078,
			41.13967,
			41.73549,
			41.30716,
			41.223,
			40.0444,
			41.16161,
			41.19189,
			40.11496,
			40.16523,
			41.08939,
			40.53078,
			47.64995,
			46.73127,
			47.65966,
			47.67323,
			46.06458,
			41.58746,
			20.89472,
			21.40222,
			21.40929,
			20.75548,
			21.34694,
			21.45,
			21.39722,
			21.50211,
			20.89111,
			21.38667,
			21.34417,
			19.72972,
			21.30694,
			61.32139,
			64.83778,
			61.21806,
			64.8,
			45.90194,
			21.35237,
			21.4936,
			39.82861
        };

        const float _cityLongs[] = {
                                -88.60005,
                                -85.39049,
                                -86.00664,
                                -85.37828,
                                -85.83496,
                                -85.00077,
                                -82.52546,
                                -84.28073,
                                -84.15574,
                                -84.23269,
                                -85.07661,
                                -84.98771,
                                -85.16467,
                                -83.97878,
                                -86.52639,
                                -86.14165,
                                -86.39777,
                                -86.11804,
                                -85.75996,
                                -85.92138,
                                -87.55585,
                                -86.01387,
                                -85.76942,
                                -86.10665,
                                -86.15804,
                                -86.93111,
                                -85.73718,
                                -86.02526,
                                -85.82413,
                                -85.37025,
                                -86.39944,
                                -84.89024,
                                -85.89025,
                                -85.77692,
                                -87.41391,
                                -87.52863,
                                -98.76481,
                                -99.32677,
                                -86.4436,
                                -84.72411,
                                -84.77217,
                                -85.85913,
                                -84.60078,
                                -85.58774,
                                -84.62661,
                                -84.87328,
                                -87.59001,
                                -85.62413,
                                -87.48862,
                                -85.5644,
                                -85.75941,
                                -87.49889,
                                -85.65968,
                                -85.68774,
                                -87.11333,
                                -85.8583,
                                -85.94913,
                                -85.65579,
                                -85.82274,
                                -85.87024,
                                -84.5605,
                                -84.50411,
                                -84.56134,
                                -84.74523,
                                -84.59939,
                                -85.30968,
                                -85.50164,
                                -85.15023,
                                -85.24912,
                                -85.2519,
                                -86.44666,
                                -86.2911,
                                -86.885,
                                -86.20943,
                                -86.05499,
                                -86.20887,
                                -85.83163,
                                -85.48078,
                                -83.30993,
                                -87.63002,
                                -85.68025,
                                -86.87445,
                                -87.36531,
                                -85.97667,
                                -85.12886,
                                -86.51084,
                                -87.34643,
                                -85.83444,
                                -86.12569,
                                -87.42365,
                                -87.25504,
                                -85.49748,
                                -86.1336,
                                -86.72252,
                                -86.87529,
                                -86.46917,
                                -86.35667,
                                -85.65914,
                                -87.33281,
                                -86.89503,
                                -86.15862,
                                -85.38636,
                                -86.0086,
                                -87.17615,
                                -87.45476,
                                -86.25001,
                                -87.06114,
                                -86.90807,
                                -86.12749,
                                -84.03717,
                                -83.21104,
                                -85.95365,
                                -83.74088,
                                -85.17971,
                                -83.48216,
                                -83.17631,
                                -83.27326,
                                -83.04575,
                                -83.13465,
                                -85.48975,
                                -83.33104,
                                -85.66809,
                                -85.76309,
                                -83.04964,
                                -83.10409,
                                -86.10893,
                                -84.51525,
                                -84.40135,
                                -85.79198,
                                -85.58723,
                                -85.64475,
                                -84.55553,
                                -83.17854,
                                -83.1052,
                                -87.39542,
                                -83.39771,
                                -84.76751,
                                -86.24839,
                                -86.26395,
                                -85.58,
                                -83.3966,
                                -83.03298,
                                -83.19381,
                                -83.0302,
                                -83.26965,
                                -83.17826,
                                -85.76809,
                                -83.0277,
                                -84.62082,
                                -83.38632,
                                -83.40021,
                                -83.14992,
                                -85.70531,
                                -83.61299,
                                -98.70844,
                                -98.34201,
                                -98.38839,
                                -99.08148,
                                -83.65132,
                                -84.35578,
                                -83.12186,
                                -84.10523,
                                -83.48688,
                                -83.62716,
                                -84.24244,
                                -84.1555,
                                -83.71299,
                                -83.17797,
                                -83.55521,
                                -84.20328,
                                -98.48648,
                                -87.82119,
                                -87.65758,
                                -87.78285,
                                -87.71453,
                                -112.58378,
                                -109.54534,
                                -111.65127,
                                -114.41189,
                                -114.05301,
                                -114.32245,
                                -110.93425,
                                -111.32514,
                                -112.4685,
                                -112.32525,
                                -110.97648,
                                -119.70292,
                                -119.77237,
                                -119.4504,
                                -119.55597,
                                -119.61208,
                                -119.98435,
                                -108.44898,
                                -107.88007,
                                -108.55065,
                                -107.87617,
                                -104.76136,
                                -104.60914,
                                -104.72275,
                                -100.01708,
                                -100.87266,
                                -100.921,
                                -104.22884,
                                -103.20523,
                                -108.21869,
                                -108.74258,
                                -103.13604,
                                -106.77834,
                                -114.83249,
                                -119.7674,
                                -119.25183,
                                -114.06719,
                                -115.98391,
                                -119.8138,
                                -119.70741,
                                -119.75269,
                                -119.77602,
                                -101.8313,
                                -101.47874,
                                -106.48693,
                                -102.3977,
                                -106.20748,
                                -101.85517,
                                -102.07791,
                                -102.36764,
                                -100.95987,
                                -101.70684,
                                -106.30331,
                                -106.29054,
                                -102.49876,
                                -113.06189,
                                -113.58412,
                                -113.50829,
                                -134.41972,
                                -120.65301,
                                -116.20345,
                                -116.68736,
                                -116.78047,
                                -116.35401,
                                -112.03414,
                                -116.42012,
                                -117.01766,
                                -116.97543,
                                -116.39151,
                                -117.00017,
                                -116.56346,
                                -112.44553,
                                -116.95159,
                                -111.78969,
                                -114.46087,
                                -111.03856,
                                -112.53474,
                                -111.30081,
                                -112.03611,
                                -114.31291,
                                -113.994,
                                -100.78374,
                                -102.78962,
                                -100.88958,
                                -101.29627,
                                -100.76542,
                                -103.66717,
                                -115.76312,
                                -121.73722,
                                -121.31531,
                                -122.98371,
                                -122.98287,
                                -123.02621,
                                -121.78167,
                                -118.7886,
                                -121.17392,
                                -123.0351,
                                -103.23101,
                                -112.0155,
                                -112.02605,
                                -112.0505,
                                -111.83439,
                                -111.96022,
                                -111.97383,
                                -111.73215,
                                -112.02633,
                                -111.97133,
                                -111.65492,
                                -111.61075,
                                -112.06467,
                                -112.29828,
                                -117.23991,
                                -117.17962,
                                -117.42908,
                                -117.23937,
                                -118.34302,
                                -109.2029,
                                -156.47,
                                -157.73944,
                                -157.80092,
                                -156.45446,
                                -158.08583,
                                -158.00111,
                                -157.97333,
                                -158.02104,
                                -156.50472,
                                -158.00917,
                                -158.03083,
                                -155.09,
                                -157.85833,
                                -149.56778,
                                -147.71639,
                                -149.90028,
                                -147.53333,
                                -112.65708,
                                -158.08655,
                                -158.06151,
                                -86.38224
        };

        const int GMToffsets[] = {
                    -6,
                    -6,
                    -6,
                    -6,
                    -6,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -6,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -6,
                    -6,
                    -6,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -6,
                    -5,
                    -6,
                    -5,
                    -5,
                    -6,
                    -5,
                    -5,
                    -6,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -6,
                    -5,
                    -5,
                    -5,
                    -6,
                    -6,
                    -6,
                    -6,
                    -5,
                    -6,
                    -6,
                    -6,
                    -5,
                    -6,
                    -5,
                    -5,
                    -6,
                    -5,
                    -5,
                    -5,
                    -6,
                    -5,
                    -5,
                    -6,
                    -6,
                    -5,
                    -5,
                    -6,
                    -5,
                    -5,
                    -5,
                    -5,
                    -6,
                    -6,
                    -5,
                    -5,
                    -5,
                    -6,
                    -6,
                    -5,
                    -6,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -6,
                    -6,
                    -6,
                    -6,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -5,
                    -6,
                    -6,
                    -6,
                    -6,
                    -6,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -6,
                    -6,
                    -6,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -6,
                    -6,
                    -7,
                    -6,
                    -7,
                    -6,
                    -6,
                    -6,
                    -6,
                    -6,
                    -7,
                    -7,
                    -6,
                    -7,
                    -7,
                    -7,
                    -9,
                    -8,
                    -7,
                    -7,
                    -8,
                    -7,
                    -7,
                    -7,
                    -8,
                    -8,
                    -7,
                    -8,
                    -7,
                    -7,
                    -8,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -6,
                    -7,
                    -6,
                    -6,
                    -6,
                    -7,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -7,
                    -8,
                    -8,
                    -8,
                    -8,
                    -8,
                    -7,
                    -10,
                    -10,
                    -10,
                    -10,
                    -10,
                    -10,
                    -10,
                    -10,
                    -10,
                    -10,
                    -10,
                    -10,
                    -10,
                    -9,
                    -9,
                    -9,
                    -9,
                    -7,
                    -10,
                    -10,
                    -5
        };

        const bool usesDST[] = {
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true,
            true,
            true,
            false,
            false,
            true
        };
 
        for (int ii = 0; ii < _numCities; ii++) {
            //find the distance between my coordinates and the next city on the list
            thisDistance = GPSTimeZoneLookup::distanceBetween(latitude,longitude,_cityLats[ii],_cityLongs[ii]);
            if (thisDistance < _closestCityDistance) {
                _closestCityDistance = thisDistance;
                // _minIndex = ii;
                _closestCityLat =  _cityLats[ii];
                _closestCityLong = _cityLongs[ii];
                _closestCityUsesDST = usesDST[ii];
                _closestCityGMTOffset = GMToffsets[ii];
            }
        }
}


double GPSTimeZoneLookup::distanceBetween(double lat1, double long1, double lat2, double long2)
{
  // this function was taken from TinyGPSPlus
  // http://arduiniana.org/libraries/tinygpsplus/
  // returns distance in meters between two positions, both specified
  // as signed decimal-degrees latitude and longitude. Uses great-circle
  // distance computation for hypothetical sphere of radius 6372795 meters.
  // Because Earth is no exact sphere, rounding errors may be up to 0.5%.
  // Courtesy of Maarten Lamers
  double delta = radians(long1-long2);
  double sdlong = sin(delta);
  double cdlong = cos(delta);
  lat1 = radians(lat1);
  lat2 = radians(lat2);
  double slat1 = sin(lat1);
  double clat1 = cos(lat1);
  double slat2 = sin(lat2);
  double clat2 = cos(lat2);
  delta = (clat1 * slat2) - (slat1 * clat2 * cdlong);
  delta = sq(delta);
  delta += sq(clat2 * sdlong);
  delta = sqrt(delta);
  double denom = (slat1 * slat2) + (clat1 * clat2 * cdlong);
  delta = atan2(delta, denom);
  return delta * 6372795;
}
  
